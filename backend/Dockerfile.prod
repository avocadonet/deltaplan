# --- Этап 1: Сборщик зависимостей ---
FROM python:3.11-slim-bookworm AS builder

RUN apt-get update && apt-get install -y --no-install-recommends build-essential libpq-dev
WORKDIR /app_builder
COPY backend/requirements.txt .
RUN pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# --- Этап 2: Финальный образ ---
FROM python:3.11-slim-bookworm

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Основная рабочая директория
WORKDIR /app

RUN addgroup --system app && adduser --system --ingroup app app
# Устанавливаем зависимости для Pillow и других библиотек
RUN apt-get update && apt-get install -y --no-install-recommends libpq-dev libjpeg-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*

COPY --from=builder /wheels /wheels
RUN pip install --no-cache /wheels/*.whl

# Копируем приложение
COPY backend/ .

# Копируем и делаем исполняемым entrypoint скрипт
COPY backend/entrypoint.prod.sh /app/entrypoint.prod.sh
RUN chmod +x /app/entrypoint.prod.sh

# Создаем директории и назначаем права
RUN mkdir -p /app/staticfiles /app/media && \
    chown -R app:app /app/staticfiles /app/media

# Меняем владельца всего приложения
RUN chown -R app:app /app
# Переключаемся на непривилегированного пользователя
USER app

EXPOSE 8000

# Указываем entrypoint
ENTRYPOINT ["/app/entrypoint.prod.sh"]

# Команда по умолчанию, которая будет передана в entrypoint
CMD ["gunicorn", "deltaplan.wsgi:application", "--bind", "0.0.0.0:8000"]
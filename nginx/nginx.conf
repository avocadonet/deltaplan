# =================================================================
#                ПРОИЗВОДИТЕЛЬНАЯ КОНФИГУРАЦИЯ NGINX
#                   для deltaplanonline.ru
# =================================================================

# Серверный блок для перенаправления всего HTTP трафика на HTTPS
# Это стандартная и лучшая практика для безопасности и SEO.
server {
    listen 80;
    server_name deltaplanonline.ru www.deltaplanonline.ru;

    # Специальный location для Let's Encrypt для подтверждения домена
    # Это позволит вам получать и обновлять SSL-сертификаты.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Для всех остальных запросов делаем постоянный редирект на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Основной серверный блок, который обслуживает сайт по HTTPS
server {
    listen 443 ssl http2;
    server_name deltaplanonline.ru www.deltaplanonline.ru;

    # --- Пути к вашим SSL сертификатам (полученным от Let's Encrypt) ---
    ssl_certificate /etc/letsencrypt/live/deltaplanonline.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/deltaplanonline.ru/privkey.pem;

    # --- Настройки безопасности SSL ---
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    # Заголовок HSTS (HTTP Strict Transport Security) говорит браузерам
    # всегда подключаться к вашему сайту по HTTPS.
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;


    # --- Логика обработки запросов ---

    # 1. Медиа-файлы, загруженные пользователями (без изменений)
    location /media/ {
        alias /app/media/;
        expires 7d;
    }

    # 2. Статика Django (для админки и т.д.) (без изменений)
    location /static/ {
        alias /app/staticfiles/;
        expires 7d;
    }

    # 3. Запросы к API отправляем на бэкенд.
    # ^~ означает "не искать другие location, если этот подошел".
    location ^~ /api/ {
        proxy_pass http://backend_prod:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 4. Запросы к админке отправляем на бэкенд.
    # Мы делаем отдельный блок для админки для максимальной надежности.
    location ^~ /admin/ {
        # Разрешаем доступ только с вашего IP
        allow 85.140.17.229;
        # Запрещаем доступ всем остальным
        deny all;
        proxy_pass http://backend_prod:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 5. Все остальные запросы - это фронтенд (Flutter)
    # Этот блок теперь будет срабатывать только если не подошли предыдущие.
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
}